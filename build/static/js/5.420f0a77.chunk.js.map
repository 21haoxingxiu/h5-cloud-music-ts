{"version":3,"sources":["api/config.ts","components/Header/index.tsx","components/MusicNote/index.tsx","containers/SongList/styles.ts","containers/SongList/index.tsx","containers/Singer/style.ts","containers/Singer/store/actionCreators.ts","api/singer.ts","containers/Singer/index.tsx"],"names":["categoryTypes","name","key","alphaTypes","HEADER_HEIGHT","HeaderContainer","styled","div","style","Header","React","props","ref","handleClick","title","isMarquee","className","onClick","Container","MusicNote","forwardRef","iconsRef","useRef","transform","prefixStyle","createNode","txt","template","tempNode","document","createElement","innerHTML","firstChild","useEffect","nodeRef","current","i","node","appendChild","slice","call","children","forEach","item","setAttribute","addEventListener","this","display","querySelector","startAnimation","x","y","getAttribute","left","top","setTimeout","useImperativeHandle","memo","SongList","showBackground","SongItem","ul","noWrap","SongsList","refs","useState","startIndex","setStartIndex","songs","collectCount","showCollect","loading","usePageSplit","musicAnimation","changePlayListDispatch","changeCurrentIndexDispatch","changeSequencePlayListDispatch","totalCount","length","ONE_PAGE_COUNT","count","selectItem","e","index","nativeEvent","clientX","clientY","Math","floor","list","res","end","push","id","ar","getName","artists","al","album","songList","connect","state","fullScreen","player","playing","currentSong","scrollY","dispatch","data","changePlayList","changeCurrentIndex","changeSequencePlayList","play","ImgWrapper","bgUrl","CollectButton","SongListWrapper","BgLayer","getSinger","axiosInstance","get","getSingerRequest","then","type","actionTypes","changeEnterLoading","catch","console","log","artist","singer","hotSongList","enterLoading","getSingerDisPatch","withRouter","showStatus","setShowStatus","initialHeight","header","imageWrapper","collectButton","layer","songScrollWrapper","songScroll","musicNoteRef","setShowStatusFalse","useCallback","match","params","h","offsetHeight","refresh","CSSTransition","in","timeout","classNames","appear","unmountOnExit","onExited","history","goBack","picUrl","Scroll","onScroll","pos","height","newY","imageDOM","buttonDOM","headerDOM","layerDOM","minScrollY","percent","abs","zIndex","paddingTop","Loading"],"mappings":"8HAEA,sGACO,IAAMA,EAAgB,CAC3B,CACEC,KAAM,qBACNC,IAAK,QAEP,CACED,KAAM,qBACNC,IAAK,QAEP,CACED,KAAM,2BACNC,IAAK,QAEP,CACED,KAAM,qBACNC,IAAK,QAEP,CACED,KAAM,qBACNC,IAAK,QAEP,CACED,KAAM,2BACNC,IAAK,QAEP,CACED,KAAM,qBACNC,IAAK,QAEP,CACED,KAAM,qBACNC,IAAK,QAEP,CACED,KAAM,2BACNC,IAAK,QAEP,CACED,KAAM,qBACNC,IAAK,QAEP,CACED,KAAM,qBACNC,IAAK,QAEP,CACED,KAAM,2BACNC,IAAK,QAEP,CACED,KAAM,iCACNC,IAAK,QAEP,CACED,KAAM,iCACNC,IAAK,QAEP,CACED,KAAM,2BACNC,IAAK,SAKIC,EAAa,CACxB,CACED,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,KAER,CACEC,IAAK,IACLD,KAAM,MAoCGG,EAAgB,I,ybC1M7B,IAAMC,EAAkBC,IAAOC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","file":"static/js/5.420f0a77.chunk.js","sourcesContent":["\r\n\r\n//歌手种类\r\nexport const categoryTypes = [\r\n  {\r\n    name: \"华语男\",\r\n    key: \"1001\"\r\n  },\r\n  {\r\n    name: \"华语女\",\r\n    key: \"1002\"\r\n  },\r\n  {\r\n    name: \"华语组合\",\r\n    key: \"1003\"\r\n  },\r\n  {\r\n    name: \"欧美男\",\r\n    key: \"2001\"\r\n  },\r\n  {\r\n    name: \"欧美女\",\r\n    key: \"2002\"\r\n  },\r\n  {\r\n    name: \"欧美组合\",\r\n    key: \"2003\"\r\n  },\r\n  {\r\n    name: \"日本男\",\r\n    key: \"6001\"\r\n  },\r\n  {\r\n    name: \"日本女\",\r\n    key: \"6002\"\r\n  },\r\n  {\r\n    name: \"日本组合\",\r\n    key: \"6003\"\r\n  },\r\n  {\r\n    name: \"韩国男\",\r\n    key: \"7001\"\r\n  },\r\n  {\r\n    name: \"韩国女\",\r\n    key: \"7002\"\r\n  },\r\n  {\r\n    name: \"韩国组合\",\r\n    key: \"7003\"\r\n  },\r\n  {\r\n    name: \"其他男歌手\",\r\n    key: \"4001\"\r\n  },\r\n  {\r\n    name: \"其他女歌手\",\r\n    key: \"4002\"\r\n  },\r\n  {\r\n    name: \"其他组合\",\r\n    key: \"4003\"\r\n  }\r\n];\r\n\r\n//歌手首字母\r\nexport const alphaTypes = [\r\n  {\r\n    key: \"A\",\r\n    name: \"A\"\r\n  },\r\n  {\r\n    key: \"B\",\r\n    name: \"B\"\r\n  },\r\n  {\r\n    key: \"C\",\r\n    name: \"C\"\r\n  },\r\n  {\r\n    key: \"D\",\r\n    name: \"D\"\r\n  },\r\n  {\r\n    key: \"E\",\r\n    name: \"E\"\r\n  },\r\n  {\r\n    key: \"F\",\r\n    name: \"F\"\r\n  },\r\n  {\r\n    key: \"G\",\r\n    name: \"G\"\r\n  },\r\n  {\r\n    key: \"H\",\r\n    name: \"H\"\r\n  },\r\n  {\r\n    key: \"I\",\r\n    name: \"I\"\r\n  },\r\n  {\r\n    key: \"J\",\r\n    name: \"J\"\r\n  },\r\n  {\r\n    key: \"K\",\r\n    name: \"K\"\r\n  },\r\n  {\r\n    key: \"L\",\r\n    name: \"L\"\r\n  },\r\n  {\r\n    key: \"M\",\r\n    name: \"M\"\r\n  },\r\n  {\r\n    key: \"N\",\r\n    name: \"N\"\r\n  },\r\n  {\r\n    key: \"O\",\r\n    name: \"O\"\r\n  },\r\n  {\r\n    key: \"P\",\r\n    name: \"P\"\r\n  },\r\n  {\r\n    key: \"Q\",\r\n    name: \"Q\"\r\n  },\r\n  {\r\n    key: \"R\",\r\n    name: \"R\"\r\n  },\r\n  {\r\n    key: \"S\",\r\n    name: \"S\"\r\n  },\r\n  {\r\n    key: \"T\",\r\n    name: \"T\"\r\n  },\r\n  {\r\n    key: \"U\",\r\n    name: \"U\"\r\n  },\r\n  {\r\n    key: \"V\",\r\n    name: \"V\"\r\n  },\r\n  {\r\n    key: \"W\",\r\n    name: \"W\"\r\n  },\r\n  {\r\n    key: \"X\",\r\n    name: \"X\"\r\n  },\r\n  {\r\n    key: \"Y\",\r\n    name: \"Y\"\r\n  },\r\n  {\r\n    key: \"Z\",\r\n    name: \"Z\"\r\n  }\r\n];\r\n\r\n//排行榜编号\r\nexport const RankTypes = {\r\n  \"0\": \"云音乐新歌榜\",\r\n  \"1\": \"云音乐热歌榜\",\r\n  \"2\": \"网易原创歌曲榜\",\r\n  \"3\": \"云音乐飙升榜\",\r\n  \"4\": \"云音乐国电榜\",\r\n  \"5\": \"UK排行榜周榜\",\r\n  \"6\": \"美国Billboard周榜\",\r\n  \"7\": \"KTV唛榜\",\r\n  \"8\": \"iTunes榜\",\r\n  \"9\": \"Hit FM Top榜\",\r\n  \"10\": \"日本Oricon周榜\",\r\n  \"11\": \"韩国Melon排行榜周榜\",\r\n  \"12\": \"韩国Mnet排行榜周榜\",\r\n  \"13\": \"韩国Melon原声周榜\",\r\n  \"14\": \"中国TOP排行榜（港台榜）\",\r\n  \"15\": \"中国TOP排行榜（内地榜）\",\r\n  \"16\": \"香港电台中文歌曲龙虎榜\",\r\n  \"17\": \"华语金曲榜\",\r\n  \"18\": \"中国嘻哈榜\",\r\n  \"19\": \"法国 NRJ Vos Hits 周榜\",\r\n  \"20\": \"台湾Hito排行榜\",\r\n  \"21\": \"Beatport全球电子舞曲榜\",\r\n  \"22\": \"云音乐ACG音乐榜\",\r\n  \"23\": \"江小白YOLO云音乐说唱榜\"\r\n};\r\n\r\n//歌单一页限定歌曲数量\r\nexport const ONE_PAGE_COUNT = 50;\r\n\r\n//顶部的高度\r\nexport const HEADER_HEIGHT = 45;\r\n\r\n//播放模式\r\nexport const playMode = {\r\n  sequence: 0,\r\n  loop: 1,\r\n  random: 2\r\n};\r\n\r\n// 倍速播放配置\r\nexport const list = [\r\n  {\r\n    key: 0.75,\r\n    name: \"x0.75\"\r\n  },\r\n  {\r\n    key: 1,\r\n    name:\"x1\"\r\n  }, \r\n  {\r\n    key: 1.25,\r\n    name:\"x1.25\"\r\n  }, \r\n  {\r\n    key: 1.5,\r\n    name:\"x1.5\"\r\n  }, \r\n  {\r\n    key: 2,\r\n    name:\"x2\"\r\n  }\r\n]","import * as React from 'react';\nimport styled from 'styled-components';\nimport style from 'assets/globalStyle';\n\nconst HeaderContainer = styled.div`\n  position: fixed;\n  padding: 5px 10px;\n  padding-top: 0;\n  height: 40px;\n  width: 100%;\n  z-index: 100;\n  display: flex;\n  line-height: 40px;\n  color: ${style['font-color-light']};\n  .back {\n    margin-right: 5px;\n    font-size: 20px;\n    width: 20px;\n  }\n  > h1 {\n    font-size: ${style['font-size-l']};\n    font-weight: 700;\n  }\n`;\n\ninterface HeaderProps {\n  handleClick: () => void;\n  title: string;\n  isMarquee: boolean;\n}\n// 处理函数组件拿不到ref的问题,所以用forwardRef\nconst Header = React.forwardRef((props: HeaderProps, ref) => {\n  const { handleClick = () => {}, title = '标题', isMarquee = false } = props;\n  return (\n    <HeaderContainer ref={ref as any}>\n      <i className='iconfont back' onClick={handleClick}>\n        &#xe6e5;\n      </i>\n      {// eslint-disable-next-line\n      isMarquee ? (\n        <div className='marquee'>\n          <h1>{title}</h1>\n        </div>\n      ) : (\n        <h1>{title}</h1>\n      )}\n    </HeaderContainer>\n  );\n});\n\nexport default React.memo(Header);\n","import React, {\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  forwardRef,\n} from 'react';\nimport styled from 'styled-components';\nimport { prefixStyle } from 'utils';\nimport style from 'assets/globalStyle';\n\ninterface IPos {\n  x: number;\n  y: number;\n}\n\nconst Container = styled.div`\n  .icon_wrapper {\n    position: fixed;\n    z-index: 1000;\n    margin-top: -10px;\n    margin-left: -10px;\n    color: ${style['theme-color']};\n    font-size: 14px;\n    display: none;\n    transition: transform 1s cubic-bezier(0.62, -0.1, 0.86, 0.57);\n    transform: translate3d(0, 0, 0);\n    > div {\n      transition: transform 1s;\n    }\n  }\n`;\n\nexport interface IMusicNote {\n  startAnimation: (e: IPos) => void;\n}\n\nconst MusicNote = forwardRef<IMusicNote>((props, ref) => {\n  const iconsRef = useRef<HTMLDivElement>();\n\n  const ICON_NUMBER = 1;\n\n  const transform: any = prefixStyle('transform');\n\n  const createNode = (txt: string) => {\n    const template = `<div class='icon_wrapper'>${txt}</div>`;\n    let tempNode = document.createElement('div');\n    tempNode.innerHTML = template;\n    return tempNode.firstChild;\n  };\n\n  useEffect(() => {\n    const nodeRef = iconsRef.current!;\n    for (let i = 0; i < ICON_NUMBER; i++) {\n      let node = createNode(`<div class=\"iconfont\">&#xe62d;</div>`)!;\n      nodeRef.appendChild(node);\n    }\n    let domArray = [].slice.call(nodeRef.children);\n    domArray.forEach((item: HTMLDivElement) => {\n      item.setAttribute('running', 'false');\n      item.addEventListener(\n        'transitionend',\n        function () {\n          this.style.display = 'none';\n          this.style[transform] = `translate3d(0, 0, 0)`;\n          this.setAttribute('running', 'false');\n          let icon = this.querySelector('div')!;\n          icon.style[transform] = `translate3d(0, 0, 0)`;\n        },\n        false\n      );\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  const startAnimation = ({ x, y }: any) => {\n    const nodeRef = iconsRef.current!;\n    for (let i = 0; i < ICON_NUMBER; i++) {\n      let domArray = [].slice.call(nodeRef.children);\n      let item: HTMLDivElement = domArray[i];\n      // 选择一个空闲的元素来开始动画\n      if (item.getAttribute('running') === 'false') {\n        item.style.left = x + 'px';\n        item.style.top = y + 'px';\n        item.style.display = 'inline-block';\n        setTimeout(() => {\n          item.setAttribute('running', 'true');\n          item.style[transform] = `translate3d(-40px, 750px, 0)`;\n          let icon = item.querySelector('div')!;\n          icon.style[transform] = `translate3d(-40px, 0, 0)`;\n        }, 20);\n        break;\n      }\n    }\n  };\n\n  useImperativeHandle(ref, () => ({\n    startAnimation,\n  }));\n\n  return <Container ref={iconsRef as any} />;\n});\n\nexport default React.memo(MusicNote);\n","import styled from 'styled-components';\nimport style from 'assets/globalStyle';\n\ninterface SongListProps {\n  showBackground: boolean;\n  ref: any;\n}\nexport const SongList = styled.div`\n  border-radius: 10px;\n  opacity: 0.98;\n  ${(props: SongListProps) =>\n    props.showBackground\n      ? `background: ${style['highlight-background-color']}`\n      : ''}\n  .first_line {\n    box-sizing: border-box;\n    padding: 10px 0;\n    margin-left: 10px;\n    position: relative;\n    justify-content: space-between;\n    border-bottom: 1px solid ${style['border-color']};\n    .play_all {\n      display: inline-block;\n      line-height: 24px;\n      color: ${style['font-color-desc']};\n      .iconfont {\n        font-size: 24px;\n        margin-right: 10px;\n        vertical-align: top;\n      }\n      .sum {\n        font-size: ${style['font-size-s']};\n        color: ${style['font-color-desc-v2']};\n      }\n      > span {\n        vertical-align: top;\n      }\n    }\n    .add_list,\n    .isCollected {\n      display: flex;\n      align-items: center;\n      position: absolute;\n      right: 0;\n      top: 0px;\n      bottom: 0;\n      width: 130px;\n      line-height: 34px;\n      background: ${style['theme-color']};\n      color: ${style['font-color-light']};\n      font-size: 0;\n      border-radius: 3px;\n      vertical-align: top;\n      .iconfont {\n        vertical-align: top;\n        font-size: 10px;\n        margin: 0 5px 0 10px;\n      }\n      span {\n        font-size: 14px;\n        line-height: 34px;\n      }\n    }\n    .isCollected {\n      display: flex;\n      background: ${style['background-color']};\n      color: ${style['font-color-desc']};\n    }\n  }\n`;\nexport const SongItem = styled.ul`\n  > li {\n    display: flex;\n    height: 60px;\n    align-items: center;\n    .index {\n      flex-basis: 60px;\n      width: 60px;\n      height: 60px;\n      line-height: 60px;\n      text-align: center;\n    }\n    .info {\n      box-sizing: border-box;\n      flex: 1;\n      display: flex;\n      height: 100%;\n      padding: 5px 0;\n      flex-direction: column;\n      justify-content: space-around;\n      border-bottom: 1px solid ${style['border-color']};\n      ${style.noWrap()}\n      >span {\n        ${style.noWrap()}\n      }\n      > span:first-child {\n        color: ${style['font-color-desc']};\n      }\n      > span:last-child {\n        font-size: ${style['font-size-s']};\n        color: #bba8a8;\n      }\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { SongList, SongItem } from './styles';\nimport { getName } from 'utils/index';\nimport { ONE_PAGE_COUNT } from 'utils/config';\nimport { connect } from 'react-redux';\nimport {\n  changePlayList,\n  changeCurrentIndex,\n  changeSequencePlayList,\n} from 'containers/Player/store/actionCreators';\n\ninterface SongListProps {\n  songs: any;\n  collectCount: number;\n  showCollect?: boolean;\n  loading?: boolean;\n  usePageSplit?: boolean;\n  musicAnimation?: any;\n  changePlayListDispatch: any;\n  changeCurrentIndexDispatch: any;\n  changeSequencePlayListDispatch: any;\n  showBackground?: boolean;\n}\nconst SongsList = React.forwardRef((props: SongListProps, refs) => {\n  const [startIndex, setStartIndex] = useState(0);\n\n  const {\n    songs = [],\n    collectCount,\n    showCollect = true,\n    loading = false,\n    usePageSplit = false,\n    showBackground = false,\n  } = props;\n\n  const { musicAnimation } = props;\n\n  const {\n    changePlayListDispatch,\n    changeCurrentIndexDispatch,\n    changeSequencePlayListDispatch,\n  } = props;\n  const totalCount = songs.length;\n\n  useEffect(() => {\n    if (!loading) return;\n    if (startIndex + 1 + ONE_PAGE_COUNT >= totalCount) return;\n    setStartIndex(startIndex + ONE_PAGE_COUNT);\n  }, [loading, startIndex, totalCount]);\n\n  const selectItem = (e: any, index: number) => {\n    changePlayListDispatch(songs);\n    changeSequencePlayListDispatch(songs);\n    changeCurrentIndexDispatch(index);\n    musicAnimation(e.nativeEvent.clientX, e.nativeEvent.clientY);\n  };\n\n  let songList = (list: any[]) => {\n    let res = [];\n    // 判断页数是否超过总数\n    let end = usePageSplit ? startIndex + ONE_PAGE_COUNT : list.length;\n    for (let i = 0; i < end; i++) {\n      if (i >= list.length) break;\n      let item = list[i];\n      res.push(\n        <li key={item.id} onClick={e => selectItem(e, i)}>\n          <span className='index'>{i + 1}</span>\n          <div className='info'>\n            <span>{item.name}</span>\n            <span>\n              {item.ar ? getName(item.ar) : getName(item.artists)} -{' '}\n              {item.al ? item.al.name : item.album.name}\n            </span>\n          </div>\n        </li>\n      );\n    }\n    return res;\n  };\n\n  const collect = (count: number) => {\n    return (\n      <div className='add_list'>\n        <i className='iconfont'>&#xe600;</i>\n        <span>收藏({Math.floor(count / 1000) / 10}万)</span>\n      </div>\n      // <div className=\"isCollected\">\n      //   <span>已收藏({Math.floor(count/1000)/10}万)</span>\n      // </div>\n    );\n  };\n  return (\n    <SongList ref={refs as any} showBackground={showBackground}>\n      <div className='first_line'>\n        <div className='play_all' onClick={e => selectItem(e, 0)}>\n          <i className='iconfont'>&#xe73d;</i>\n          <span>\n            播放全部 <span className='sum'>(共{totalCount}首)</span>\n          </span>\n        </div>\n        {showCollect ? collect(collectCount) : null}\n      </div>\n      <SongItem>{songList(songs)}</SongItem>\n    </SongList>\n  );\n});\n\n// 映射Redux全局的state到组件的props上\nconst mapStateToProps = (state: any) => ({\n  fullScreen: state.player.fullScreen,\n  playing: state.player.playing,\n  currentSong: state.player.currentSong,\n  scrollY: state.player.scrollY,\n});\n// 映射dispatch到props上\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    changePlayListDispatch(data: any) {\n      dispatch(changePlayList(data));\n    },\n    changeCurrentIndexDispatch(data: any) {\n      dispatch(changeCurrentIndex(data));\n    },\n    changeSequencePlayListDispatch(data: any) {\n      dispatch(changeSequencePlayList(data));\n    },\n  };\n};\n\n// 将ui组件包装成容器组件\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(SongsList));\n","/*\n * @Description: new file\n * @Autor: zhan\n * @Date: 2020-07-05 16:29:12\n * @LastEditors: zhan\n * @LastEditTime: 2020-07-17 10:20:26\n */\n\nimport styled from 'styled-components';\nimport style from 'assets/globalStyle'\n\ninterface ImgWrapProps {\n  ref?: any;\n  bgUrl?: string;\n}\ninterface SongListWrapperProp {\n  ref : any;\n  play: number\n}\nexport const Container = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: ${(props: any) => (props.play > 0 ? '60px' : 0)};\n  width: 100%;\n  z-index: 100;\n  overflow: hidden;\n  background: #f2f3f4;\n  transform-origin: right bottom;\n  &.fly-enter,\n  &.fly-appear {\n    transform: rotateZ(30deg) translate3d(100%, 0, 0);\n  }\n  &.fly-enter-active,\n  &.fly-appear-active {\n    transition: transform 0.3s;\n    transform: rotateZ(0deg) translate3d(0, 0, 0);\n  }\n  &.fly-exit {\n    transform: rotateZ(0deg) translate3d(0, 0, 0);\n  }\n  &.fly-exit-active {\n    transition: transform 0.3s;\n    transform: rotateZ(30deg) translate3d(100%, 0, 0);\n  }\n`;\n\nexport const ImgWrapper = styled.div`\n  position: relative;\n  width: 100%;\n  height: 0;\n  padding-top: 75%;\n  transform-origin: top;\n  background: url(${(props: ImgWrapProps) => props.bgUrl});\n  background-size: cover;\n  z-index: 50;\n  .filter {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    /* : blur(20px); */\n    background: rgba(7, 17, 27, 0.3);\n  }\n`\n\nexport const CollectButton = styled.div`\n  position: fixed;\n  left: 0; right: 0;\n  margin: auto;\n  box-sizing: border-box;\n  width: 120px;\n  height: 40px;\n  margin-top: -55px;\n  z-index:50;\n  background: ${style[\"theme-color\"]};\n  color: ${style[\"font-color-light\"]};\n  border-radius: 20px;\n  text-align: center;\n  font-size: 0;\n  line-height: 40px;\n  .iconfont{\n    display: inline-block;\n    margin-right: 10px;\n    font-size: 12px;\n    vertical-align: 1px;\n  }\n  .text {\n    display: inline-block;\n    font-size:14px;\n    letter-spacing: 5px;\n  }\n`\n\nexport const SongListWrapper = styled.div`\n  position: absolute;\n  z-index: 50;\n  top: 0;\n  left: 0;\n  bottom: ${(props:SongListWrapperProp) => props.play ? \"60px\": 0};\n  right: 0;\n  >div{\n    position: absolute;\n    left: 0;\n    width: 100%;\n    overflow: visible;\n  }\n`\nexport const BgLayer = styled.div`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 100%;\n  background: white;\n  border-radius: 10px;\n  z-index: 50;\n`","/*\n * @Description: new file\n * @Autor: zhan\n * @Date: 2020-06-09 21:40:33\n * @LastEditors: zhan\n * @LastEditTime: 2020-07-17 09:27:00\n */ \nimport * as actionTypes from './constants';\nimport {\n  getSingerRequest,\n} from \"../../../api/singer\";\n\nexport interface changeEnterLoadingType {\n  type: typeof actionTypes.CHANGE_ENTER_LOADING;\n  data: boolean\n}\n\nexport const changeEnterLoading = (data:boolean):changeEnterLoadingType => ({\n  type: actionTypes.CHANGE_ENTER_LOADING,\n  data\n})\n\n export const changeSinger = (data:any) => ({\n  type: actionTypes.CHANGE_SINGER_INFO,\n  data\n})\n\nexport const getSinger = (id: string) => {\n  return (dispatch:any) => {\n    getSingerRequest(id).then((res:any) => {\n      dispatch(changeSinger(res))\n      dispatch(changeEnterLoading(false))\n    }).catch(() => {\n      console.log('获取个人信息失败');\n    })\n  }\n};\n","\r\nimport { axiosInstance } from \"../utils/request\";\r\n\r\n\r\nexport const getSingerRequest = (id:string) => {\r\n  return axiosInstance.get(`/artists?id=${id}`);\r\n};","import React, { useEffect, useState, useCallback, useRef } from 'react';\nimport { Container } from './style';\nimport { CSSTransition } from 'react-transition-group';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getSinger } from './store/actionCreators';\nimport { EnterLoading } from '../../App.style';\nimport Loading from 'components/Loading';\nimport Header from 'components/Header';\nimport { ImgWrapper, CollectButton, SongListWrapper, BgLayer } from \"./style\";\nimport SongsList from \"../SongList/\";\nimport MusicNote from \"components/MusicNote\";\nimport Scroll from \"components/Scroll\";\nimport { IScroll } from \"components/Scroll\";\nimport { IMusicNote } from 'components/MusicNote';\nimport { HEADER_HEIGHT } from \"api/config\";\n\nfunction Singer(props: any) {\n  const { getSingerDisPatch, artist, hotSongList, enterLoading } = props;\n  const [showStatus, setShowStatus] = useState(true);\n  const initialHeight = useRef(0)\n  const OFFSET = 5;\n  const header = useRef<HTMLDivElement>();\n  const imageWrapper = useRef<HTMLDivElement>();\n  const collectButton = useRef<HTMLDivElement>();\n  const layer = useRef<HTMLDivElement>();\n  const songScrollWrapper = useRef<HTMLDivElement>();\n  const songScroll = useRef<IScroll>();\n  const musicNoteRef = useRef<IMusicNote>();\n  const setShowStatusFalse = useCallback(() => {\n    setShowStatus(false);\n  }, [])\n\n  useEffect(() => {\n    const id = props.match.params.id;\n    getSingerDisPatch(id);\n    let h = imageWrapper.current!.offsetHeight;\n    initialHeight.current = h;\n    songScrollWrapper.current!.style.top = `${h - OFFSET}px`;\n    //把遮罩先放在下面，以裹住歌曲列表\n    layer.current!.style.top = `${h - OFFSET}px`;\n    songScroll.current!.refresh();    \n  }, [getSingerDisPatch, props.match.params.id]);\n\n  const handleScroll = (pos: any) => {\n    let height = initialHeight.current;\n    const newY = pos.y;\n    const imageDOM = imageWrapper.current!;\n    const buttonDOM = collectButton.current!;\n    const headerDOM = header.current!;\n    const layerDOM = layer.current!;\n    const minScrollY = -(height - OFFSET) + HEADER_HEIGHT;\n\n    const percent = Math.abs(newY / height);\n    //说明: 在歌手页的布局中，歌单列表其实是没有自己的背景的，layerDOM其实是起一个遮罩的作用，给歌单内容提供白色背景\n    //因此在处理的过程中，随着内容的滚动，遮罩也跟着移动\n    if (newY > 0) {\n      //处理往下拉的情况,效果：图片放大，按钮跟着偏移\n      imageDOM.style[\"transform\"] = `scale(${1 + percent})`;\n      buttonDOM.style[\"transform\"] = `translate3d(0, ${newY}px, 0)`;\n      layerDOM.style.top = `${height - OFFSET + newY}px`;\n    } else if (newY >= minScrollY) {\n      //往上滑动，但是还没超过Header部分\n      layerDOM.style.top = `${height - OFFSET - Math.abs(newY)}px`;\n      layerDOM.style.zIndex = '1';\n      imageDOM.style.paddingTop = \"75%\";\n      imageDOM.style.height = 0 + 'px';\n      imageDOM.style.zIndex = '-1';\n      buttonDOM.style[\"transform\"] = `translate3d(0, ${newY}px, 0)`;\n      buttonDOM.style[\"opacity\"] = `${1 - percent * 2}`;\n    } else if (newY < minScrollY) {\n      //往上滑动，但是超过Header部分\n      layerDOM.style.top = `${HEADER_HEIGHT - OFFSET}px`;\n      layerDOM.style.zIndex = '1';\n      //防止溢出的歌单内容遮住Header\n      headerDOM.style.zIndex = '100';\n      //此时图片高度与Header一致\n      imageDOM.style.height = `${HEADER_HEIGHT}px`;\n      imageDOM.style.paddingTop = 0 + 'px';\n      imageDOM.style.zIndex = '99';\n    }\n  };\n\n  const musicAnimation = (x:any, y:any) => {\n    musicNoteRef.current!.startAnimation({ x, y });\n  };\n\n  return (\n    <CSSTransition\n      in={showStatus}\n      timeout={300}\n      classNames=\"fly\"\n      appear={true}\n      unmountOnExit\n      onExited={() => props.history.goBack()}\n    >\n      <Container>\n        <Header\n          handleClick={setShowStatusFalse}\n          title={artist.name}\n          ref={header}\n          isMarquee= { false }\n        ></Header>\n        <ImgWrapper ref={imageWrapper} bgUrl={artist.picUrl}>\n          <div className=\"filter\"></div>\n        </ImgWrapper>   \n        <CollectButton ref={collectButton as any}>\n          <i className=\"iconfont\">&#xe62d;</i>\n          <span className=\"text\">收藏</span>\n        </CollectButton>     \n        <BgLayer ref={layer as any}></BgLayer>\n        <SongListWrapper ref={songScrollWrapper as any} play={hotSongList.length}>\n          <Scroll onScroll={handleScroll} ref={songScroll}>\n            <SongsList\n              collectCount={1}\n              songs={hotSongList}\n              showCollect={false}\n              usePageSplit={false}\n              musicAnimation={musicAnimation}\n            ></SongsList>\n          </Scroll>\n        </SongListWrapper>                \n        {enterLoading ? (\n          <EnterLoading>\n            <Loading></Loading>\n          </EnterLoading>\n        ) : null}\n        <MusicNote ref={musicNoteRef as any}></MusicNote>\n      </Container>\n    </CSSTransition>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  artist: state.singer.artist,\n  hotSongList: state.singer.hotSongList,\n  enterLoading: state.singer.enterLoading,\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    getSingerDisPatch(id: string) {\n      dispatch(getSinger(id));\n    },\n  };\n};\n\n// 将ui组件包装成容器组件\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(React.memo(withRouter(Singer)));\n"],"sourceRoot":""}